Description: >
    Alexander Barth / Udacity 2019
    My capstone project.
Parameters:
    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
        Default: UdacityCapstoneEnv

    PublicSubnet1CIDR:
        Description: Public Subnet 1 CIDR
        Type: String
        Default: 10.0.2.0/24

    PublicSubnet2CIDR:
        Description: Public Subnet 2 CIDR
        Type: String
        Default: 10.0.3.0/24

Resources:

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0033bc32cf36ec374
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0033bc32cf36ec374
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 2

  SecurityGroupEKS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: UdacityCapstoneEKSSG
      VpcId: vpc-0033bc32cf36ec374
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

  EKS:
    Type: AWS::EKS::Cluster
    Properties:
      Name: UdacityEKS
      RoleArn: arn:aws:iam::210575857620:role/udacity-eks-capstone
      ResourcesVpcConfig:
        SecurityGroupIds:
        - !Ref SecurityGroupEKS
        SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

Outputs:
  EKS: 
   Description: A reference to the created VPC
   Value: !Ref EKS
   #Export:
     # Name: !Sub ${EnvironmentName}-VPCID