Description: >
    Alexander Barth / Udacity 2019
    My capstone project.
Parameters:
    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
        Default: UdacityCapstoneEnv

    VPCCIDR:
        Description: VPC CIDR
        Tpye: String
        Default: 192.168.0.0/16

    Subnet1CIDR:
        Description: Subnet 1 CIDR
        Type: String
        Default: 192.168.1.0/24

    Subnet2CIDR:
        Description: Subnet 2 CIDR
        Type: String
        Default: 192.168.2.0/24

    Subnet3CIDR:
        Description: Subnet 3 CIDR
        Type: String
        Default: 192.168.3.0/24

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:  !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostname: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-VPC'

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnets
      - Key: Network
        Value: Public

  Route:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Subnet1CIDR
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Subnet1"

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Subnet2CIDR
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Subnet2"

  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Subnet3CIDR
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Subnet3"

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable

  Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet3
      RouteTableId: !Ref RouteTable

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref VPC

  #SecurityGroupEKS:
  #  Type: AWS::EC2::SecurityGroup
  #  Properties:
  #    GroupDescription: UdacityCapstoneEKSSG
  #    VpcId: !Ref VPC
  #    SecurityGroupIngress:
  #    - IpProtocol: tcp
  #      FromPort: 80
  #      ToPort: 80
  #      CidrIp: 0.0.0.0/0
  #    SecurityGroupIngress:
  #    - IpProtocol: tcp
  #      FromPort: 443
  #      ToPort: 443
  #      CidrIp: 0.0.0.0/0

  EKSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "eks.amazonaws.com" 
            Action: 
                - "sts:AssumeRole"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Role"
    Path: "/"
    ManagedPolicyArns: [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
    ]


  EKS:
    Type: AWS::EKS::Cluster
    Properties:
      Name: UdacityEKSCapstone
      Version: '1.14'
      RoleArn: !Ref EKSRole
      ResourcesVpcConfig:
        SecurityGroupIds:
        - !Ref ControlPlaneSecurityGroup
        SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
        - !Ref Subnet3

Outputs:
  EKS: 
   Description: A reference to the created EKS Cluster
   Value: !Ref EKS

  SubnetIds:
    Description: All subnets in the VPC
    Value: !Join [ ",", [ !Ref Subnet1, !Ref Subnet2, !Ref Subnet3 ] ]

  ClusterControlPlaneSecurityGroup:
    Description: Security group for the cluster control plane communication with worker nodes
    Value: !Join [ ",", [ !Ref ClusterControlPlaneSecurityGroup ] ]

  VpcId:
    Description: The VPC Id
    Value: !Ref VPC